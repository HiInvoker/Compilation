assume cs:code, ds:data, ss:stack

data segment


		db	'1975','1976','1977','1978','1979','1980','1981','1982','1983'
		db	'1984','1985','1986','1987','1988','1989','1990','1991','1992'
		db	'1993','1994','1995'
		;以上是表示21年的21个字符串 year


		dd	16,22,382,1356,2390,8000,16000,24486,50065,97479,140417,197514
		dd	345980,590827,803530,1183000,1843000,2759000,3753000,4649000,5937000
		;以上是表示21年公司总收入的21个数据

		dw	3,7,9,13,28,38,130,220,476,778,1001,1442,2258,2793,4037,5635,8226
		dw	11542,14430,15257,17800

		;以上是表示21年公司的员工数量

data ends

stack segment stack
		db 128 dup(0)
stack ends

table segment
			;0123456789ABCDEF
	db	21 dup ('year summ ne ?? ')
table ends

string segment

	db 10 dup ('0'),0
string ends

code segment
	start:	mov ax,stack
		mov ss,ax
		mov sp,128
	
		call clearScrn

		call tData

		call showYears

		mov ax,4c00h
		int 21h
;======================================
showYears:
		call init_showYears_rig
			
		mov cx,21

show_year:	
		call showYear
		
		call showIncome


		add bx,16
		add di,160

		loop show_year

		ret
;======================================
showIncome:	push ax
		push bx
		push cx
		push dx
		push si
		push di
		push ds
		push es
	
		mov ax,ds:[bx+5]
		mov dx,ds:[bx+7]
		
		mov si,9

		add di,20
		
		call showNumber

		pop es
		pop ds
		pop di
		pop si
		pop dx
		pop cx
		pop bx
		pop ax

		ret
;=================================
showNumber:	push ax
		push bx
		push cx
		push dx
		push si
		push di
		push ds
		push es
		

		call isShortDiv

		call init_show_income_rig

		call show_income
		
		pop es
		pop ds
		pop di
		pop si
		pop dx
		pop cx
		pop bx
		pop ax

		ret
;=================================
show_income:	push ax
		push bx
		push cx
		push dx
		push si
		push di
		push ds
		push es

		mov cx,0

s_income:
	
		mov cl,ds:[si]
		jcxz show_incomeRet
		mov es:[di],cl
		inc si
		add di,2
		jmp s_income

show_incomeRet:
		pop es
		pop ds
		pop di
		pop si
		pop dx
		pop cx
		pop bx
		pop ax

		ret
;===================================
init_show_income_rig:
		mov ax,string
		mov ds,ax
		
		mov ax,0b800h
		mov es,ax
	
		ret
;===================================
isShortDiv:	
		mov cx,dx
		jcxz ShortDiv
		push ax
		mov bp,sp
		mov cx,10

		call longDiv
		add sp,2
		
		jmp isShortDiv	
	


shortDivRet:
		ret
;==================================
longDiv:	
		mov ax,dx
		mov dx,0
		div cx
		push ax
		mov ax,ss:[bp]
		div cx
		mov cx,dx
		add cl,30h
		mov es:[si],cl
		dec si
		pop dx
		
		ret

;===================================
ShortDiv:	mov cx,10
		div cx
		add dl,30h
		mov es:[si],dl
		mov cx,ax
		jcxz shortDivRet
		mov dx,0
		dec si
		jmp shortDiv

;====================================
showYear:	push ax
		push bx
		push cx
		push dx
		push si
		push di
		push ds
		push es
		
		mov ax,0b800h
		mov es,ax		

		mov cx,4

show_letter:
		mov al,ds:[bx]
		mov es:[di],al
		inc bx
		add di,2		

		loop show_letter

		pop es
		pop ds
		pop di
		pop si
		pop dx
		pop cx
		pop bx
		pop ax

		ret
;=================================
init_showYears_rig:
		mov ax,table
		mov ds,ax
		mov bx,0

		mov ax,string
		mov es,ax
		mov si,9	

		mov di,160*3+30

		ret
;====================================
tData:		call init_tData_rig
		mov cx,21


t_data:		
		push ax
		push bx
		push cx
		push dx
		push ds
		push es
		push si
		push di
		

		call inputData

		pop di
		pop si
		pop es
		pop ds
		pop dx
		pop cx
		pop bx
		pop ax

		add si,4
		add di,16
		add bx,2

		loop t_data

		ret
;=====================================
inputData:	push ds:[si]
		pop es:[di]
		push ds:[si+2]
		pop es:[di+2]

		push ds:[bx]
		pop es:[di+10]
		
		mov ax,ds:[si+21*4]
		mov dx,ds:[si+21*4+2]
		mov es:[di+5],ax
		mov es:[di+7],dx

		div word ptr ds:[bx]

		mov es:[di+13],ax

		ret
;======================================
init_tData_rig:
		mov ax,data
		mov ds,ax
		mov si,0
		mov bx,21*4*2

		mov ax,table
		mov es,ax
		mov di,0

		ret
;======================================
clearScrn:
		call init_clear_scrn_rig
	
		mov cx,2000

clear_scrn:
		mov es:[di],ax
		add di,2

		loop clear_scrn
		ret
;===========================================
init_clear_scrn_rig:
		mov ax,0b800h
		mov es,ax
		mov di,0

		mov ax,0700h

		ret

code ends
end start
